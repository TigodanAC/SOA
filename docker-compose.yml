version: '3.8'

networks:
  my_network:
    driver: bridge

services:
  api_gateway:
    build: ./api-gateway
    ports:
      - "8080:8080"
    volumes:
      - ./users_serv:/app/users_serv
    depends_on:
      - user_service
    environment:
      - TZ=Europe/Moscow
      - PYTHONPATH=/app
    networks:
      - my_network

  user_service:
    build: ./users_serv
    ports:
      - "5000:5000"
    volumes:
      - ./users_serv:/app
    depends_on:
      - db
    environment:
      - FLASK_ENV=development
      - TZ=Europe/Moscow
      - PYTHONPATH=/app
    networks:
      - my_network

  post_service:
    build: ./posts_serv
    ports:
      - "50051:50051"
    volumes:
      - ./posts_serv:/app
    depends_on:
      - db
    environment:
      - FLASK_ENV=development
      - TZ=Europe/Moscow
      - PYTHONPATH=/app:/app/proto
    networks:
      - my_network

  db:
    image: postgres:13
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_MULTIPLE_DATABASES: user_db,post_db
      TZ: Europe/Moscow
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sh:/docker-entrypoint-initdb.d/init.sh
    networks:
      - my_network

  tests_api_gateway:
    build: ./api-gateway
    volumes:
      - ./api-gateway:/app
      - ./users_serv:/app/users_serv
    command: ["./wait-for-it.sh", "users_serv:5000", "--", "pytest", "tests/"]
    depends_on:
      - api_gateway
    environment:
      - FLASK_ENV=testing
      - TZ=Europe/Moscow
      - PYTHONPATH=/app
    networks:
      - my_network

  unit_tests:
    build: ./users_serv
    volumes:
      - ./users_serv:/app
      - ./users_serv/tests:/app/tests
    command: [ "pytest", "tests/" ]
    depends_on:
      - db
    environment:
      - FLASK_ENV=testing
      - TZ=Europe/Moscow
      - PYTHONPATH=/app
    networks:
      - my_network

volumes:
  postgres_data: