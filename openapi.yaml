openapi: 3.0.0
info:
  title: User Service API
  version: "Pre Alpha"
  description: API for user authentication and registration, and also for profile management.

servers:
  - url: http://localhost:8080
    description: API-Gateway

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: Authorization

  schemas:
    User:
      type: object
      properties:
        login:
          type: string
        first_name:
          type: string
          nullable: true
        last_name:
          type: string
          nullable: true
        email:
          type: string
          format: email
        role:
          type: string
        profile:
          type: object
          properties:
            avatar:
              type: string
              nullable: true
            description:
              type: string
              nullable: true
            date_of_birth:
              type: string
              format: date
              nullable: true

    UserProfile:
      type: object
      properties:
        avatar:
          type: string
        description:
          type: string
        date_of_birth:
          type: string
          format: date

    Post:
      type: object
      properties:
        post_id:
          type: string
        title:
          type: string
        description:
          type: string
        creator_id:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        is_private:
          type: boolean
        tags:
          type: array
          items:
            type: string

    PostList:
      type: object
      properties:
        posts:
          type: array
          items:
            $ref: '#/components/schemas/Post'
        meta:
          type: object
          properties:
            total:
              type: integer
            per_page:
              type: integer
            current_page:
              type: integer
            last_page:
              type: integer
            from_:
              type: integer
            to_:
              type: integer

    ErrorResponse:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          format: error

paths:
  /register:
    post:
      summary: Register user
      tags: [ Authentication ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                login:
                  type: string
                email:
                  type: string
                  format: email
                password:
                  type: string
              required:
                - login
                - email
                - password
            examples:
              first_user:
                summary: "Первый пользователь"
                value:
                  login: "crtistiano"
                  email: "rondaldo@example.com"
                  password: "CR@Best1985"
              second_user:
                summary: "Второй пользователь"
                value:
                  login: "lionel"
                  email: "messi@example.com"
                  password: "messi@forever87"
      responses:
        '201':
          description: Successful registration
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /login:
    post:
      summary: Login as user
      tags: [ Authentication ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                login:
                  type: string
                password:
                  type: string
              required:
                - login
                - password
            examples:
              first_user:
                summary: "Первый пользователь"
                value:
                  login: "crtistiano"
                  password: "CR@Best1985"
              second_user:
                summary: "Второй пользователь"
                value:
                  login: "lionel"
                  password: "messi@forever87"
      responses:
        '200':
          description: Successful authorization
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /profile:
    get:
      summary: Get user profile
      tags: [ Users ]
      security:
        - ApiKeyAuth: [ ]
      responses:
        '200':
          description: Profile retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: Invalid or missing token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    put:
      summary: Update user profile
      tags: [ Users ]
      security:
        - ApiKeyAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                last_name:
                  type: string
                profile:
                  type: object
                  properties:
                    avatar:
                      type: string
                    description:
                      type: string
                    date_of_birth:
                      type: string
                      format: date
            examples:
              first_user:
                summary: "Первый пользователь"
                value:
                  first_name: "Cristiano"
                  last_name: "rondaldo"
                  profile:
                    avatar: "https://example.com/cr7.png"
                    description: "Best footballer over all time"
                    date_of_birth: "1985-02-05"
              second_user:
                summary: "Второй пользователь"
                value:
                  first_name: "lionel"
                  last_name: "Messi"
                  profile:
                    avatar: "https://example.com/barca10.png"
                    description: "Argentina one love"
                    date_of_birth: "1987-06-24"
      responses:
        '200':
          description: Profile updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          description: Invalid or missing token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /posts:
    post:
      summary: Create new post
      tags: [ Posts ]
      security:
        - ApiKeyAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                is_private:
                  type: boolean
                tags:
                  type: array
                  items:
                    type: string
              required:
                - title
            examples:
              public_post:
                summary: "Публичный пост"
                value:
                  title: "Что-то о громком"
                  description: "Это пример публичного поста"
                  is_private: false
                  tags: [ "blog", "first" ]
              private_post:
                summary: "Приватный пост"
                value:
                  title: "Личные заметки"
                  description: "Только для меня"
                  is_private: true
                  tags: [ "personal" ]
      responses:
        '201':
          description: Post created
          content:
            application/json:
              schema:
                type: object
                properties:
                  post_id:
                    type: string
                  created_at:
                    type: string
                    format: date-time
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      summary: List posts
      tags: [ Posts ]
      security:
        - ApiKeyAuth: [ ]
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
          example: 1
          description: "Номер страницы"
          required: false
        - name: per_page
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
          example: 10
          description: "Количество постов на странице"
          required: false
      responses:
        '200':
          description: Posts list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostList'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /posts/{post_id}:
    get:
      summary: Get post details
      tags: [ Posts ]
      security:
        - ApiKeyAuth: [ ]
      parameters:
        - name: post_id
          in: path
          required: true
          schema:
            type: string
          example: '1'
      responses:
        '200':
          description: Post details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      summary: Update post
      tags: [ Posts ]
      security:
        - ApiKeyAuth: [ ]
      parameters:
        - name: post_id
          in: path
          required: true
          schema:
            type: string
          example: '1'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                is_private:
                  type: boolean
                tags:
                  type: array
                  items:
                    type: string
            examples:
              edited_post:
                summary: "Изменённый пост"
                value:
                  title: "Что-то о тихом"
                  description: "Тут могла быть ваша реклама"
                  is_private: false
                  tags: [ "blog", "edited" ]
      responses:
        '200':
          description: Post updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  updated_at:
                    type: string
                    format: date-time
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      summary: Delete post
      tags: [ Posts ]
      security:
        - ApiKeyAuth: [ ]
      parameters:
        - name: post_id
          in: path
          required: true
          schema:
            type: string
          example: '1'
      responses:
        '200':
          description: Post deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
