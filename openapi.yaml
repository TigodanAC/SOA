openapi: 3.0.0
info:
  title: User Service API
  version: "Pre Alpha"
  description: API for user authentication and registration, and also for profile management.

servers:
  - url: http://localhost:8080
    description: API-Gateway

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: Authorization

  schemas:
    User:
      type: object
      properties:
        login:
          type: string
        first_name:
          type: string
          nullable: true
        last_name:
          type: string
          nullable: true
        email:
          type: string
          format: email
        role:
          type: string
        profile:
          type: object
          properties:
            avatar:
              type: string
              nullable: true
            description:
              type: string
              nullable: true
            date_of_birth:
              type: string
              format: date
              nullable: true

    UserProfile:
      type: object
      properties:
        avatar:
          type: string
        description:
          type: string
        date_of_birth:
          type: string
          format: date

    ErrorResponse:
      type: object
      properties:
        message:
          type: string
          format: error

paths:
  /register:
    post:
      summary: Register user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                login:
                  type: string
                email:
                  type: string
                  format: email
                password:
                  type: string
              required:
                - login
                - email
                - password
      responses:
        '201':
          description: Successful registration
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /login:
    post:
      summary: Login as user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                login:
                  type: string
                password:
                  type: string
              required:
                - login
                - password
      responses:
        '200':
          description: Successful authorization
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /profile:
    get:
      summary: Get user profile
      security:
        - ApiKeyAuth: [ ]
      responses:
        '200':
          description: Profile retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: Invalid or missing token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    put:
      summary: Update user profile
      security:
        - ApiKeyAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                last_name:
                  type: string
                profile:
                  type: object
                  properties:
                    avatar:
                      type: string
                    description:
                      type: string
                    date_of_birth:
                      type: string
                      format: date
      responses:
        '200':
          description: Profile updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          description: Invalid or missing token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'